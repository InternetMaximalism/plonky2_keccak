1,8c1,2
< use plonky2::field::extension::Extendable;
< use plonky2::field::packed::PackedField;
< use plonky2::field::types::Field;
< use plonky2::hash::hash_types::RichField;
< use plonky2::iop::ext_target::ExtensionTarget;
< use plonky2::plonk::circuit_builder::CircuitBuilder;
< use starky::constraint_consumer::{ConstraintConsumer, RecursiveConstraintConsumer};
< use starky::evaluation_frame::StarkEvaluationFrame;
---
> /*
> MIT License
10,12c4
< use crate::all_stark::EvmStarkFrame;
< use crate::keccak::columns::{reg_step, NUM_COLUMNS};
< use crate::keccak::keccak_stark::NUM_ROUNDS;
---
> Copyright (c) Polygon Zero
13a6,43
> Permission is hereby granted, free of charge, to any person obtaining a copy
> of this software and associated documentation files (the "Software"), to deal
> in the Software without restriction, including without limitation the rights
> to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
> copies of the Software, and to permit persons to whom the Software is
> furnished to do so, subject to the following conditions:
> 
> The above copyright notice and this permission notice shall be included in
> all copies or substantial portions of the Software.
> 
> THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
> IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
> FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
> AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
> LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
> OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
> THE SOFTWARE.
> 
> ---
> Original source: https://github.com/0xPolygonZero/zk_evm
> */
> 
> use plonky2::{
>     field::{extension::Extendable, packed::PackedField, types::Field},
>     hash::hash_types::RichField,
>     iop::ext_target::ExtensionTarget,
>     plonk::circuit_builder::CircuitBuilder,
> };
> use starky::{
>     constraint_consumer::{ConstraintConsumer, RecursiveConstraintConsumer},
>     evaluation_frame::{StarkEvaluationFrame, StarkFrame},
> };
> 
> use super::{
>     columns::{reg_step, NUM_COLUMNS},
>     keccak_stark::NUM_ROUNDS,
> };
> 
15c45
<     vars: &EvmStarkFrame<P, F, NUM_COLUMNS>,
---
>     vars: &StarkFrame<P, F, NUM_COLUMNS, 0>,
56c86
<     vars: &EvmStarkFrame<ExtensionTarget<D>, ExtensionTarget<D>, NUM_COLUMNS>,
---
>     vars: &StarkFrame<ExtensionTarget<D>, ExtensionTarget<D>, NUM_COLUMNS, 0>,
